{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\Fernando\\\\Documents\\\\GitHub\\\\semana_omnistack_10\\\\mobile\\\\src\\\\pages\\\\Main.js\";\nimport React, { useState, useEffect } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Keyboard from \"react-native-web/dist/exports/Keyboard\";\nimport KeyboardAvoidingView from \"react-native-web/dist/exports/KeyboardAvoidingView\";\nimport MapView, { Marker, Callout } from 'react-native-maps';\nimport { requestPermissionsAsync, getCurrentPositionAsync } from 'expo-location';\nimport { MaterialIcons } from '@expo/vector-icons';\n\nfunction Main(_ref) {\n  var navigation = _ref.navigation;\n\n  var _useState = useState(null),\n      _useState2 = _slicedToArray(_useState, 2),\n      currentRegion = _useState2[0],\n      setCurrentRegion = _useState2[1];\n\n  useEffect(function () {\n    function loadInitialPosition() {\n      var _await$requestPermiss, granted, _await$getCurrentPosi, coords, latitude, longitude;\n\n      return _regeneratorRuntime.async(function loadInitialPosition$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return _regeneratorRuntime.awrap(requestPermissionsAsync());\n\n            case 2:\n              _await$requestPermiss = _context.sent;\n              granted = _await$requestPermiss.granted;\n\n              if (!granted) {\n                _context.next = 11;\n                break;\n              }\n\n              _context.next = 7;\n              return _regeneratorRuntime.awrap(getCurrentPositionAsync({\n                enableHighAccuracy: true\n              }));\n\n            case 7:\n              _await$getCurrentPosi = _context.sent;\n              coords = _await$getCurrentPosi.coords;\n              latitude = coords.latitude, longitude = coords.longitude;\n              setCurrentRegion({\n                latitude: latitude,\n                longitude: longitude,\n                latitudeDelta: 0.04,\n                longitudeDelta: 0.04\n              });\n\n            case 11:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    }\n\n    loadInitialPosition();\n  }, []);\n\n  if (!currentRegion) {\n    return null;\n  }\n\n  return React.createElement(React.Fragment, null, React.createElement(MapView, {\n    initialRegion: currentRegion,\n    style: styles.map,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }\n  }, React.createElement(Marker, {\n    coordinate: {\n      latitude: -22.1316581,\n      longitude: -51.448984\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 17\n    }\n  }, React.createElement(Image, {\n    style: styles.avatar,\n    source: {\n      uri: 'https://avatars1.githubusercontent.com/u/61588919?s=460&u=a716dd90443eca06b7373fc922554771000f4048&v=4'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 21\n    }\n  }), React.createElement(Callout, {\n    onPress: function onPress() {\n      navigation.navigate('Profile', {\n        github_username: 'tchfer'\n      });\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 21\n    }\n  }, React.createElement(View, {\n    style: styles.callout,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 25\n    }\n  }, React.createElement(Text, {\n    style: styles.devName,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 29\n    }\n  }, \"Flavio Fernando da Silva\"), React.createElement(Text, {\n    style: styles.devBio,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 29\n    }\n  }, \"Aluno de ADS na Fatec, entusiasta por tecnologia e educa\\xE7\\xE3o. Atualmente aprendendo Python e Java para desenvolvimento back-end\"), React.createElement(Text, {\n    style: styles.devtechs,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 29\n    }\n  }, \"Python, JavaScript\"))))), React.createElement(View, {\n    style: styles.searchForm,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 13\n    }\n  }, React.createElement(TextInput, {\n    style: styles.searchInput,\n    placeholder: \"Buscar Devs por Techs...\",\n    placeholderTextColor: \"#999\",\n    autoCapitalize: \"words\",\n    autoCorrect: false,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 17\n    }\n  }), React.createElement(TouchableOpacity, {\n    onPress: function onPress() {},\n    style: styles.loadButton,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 17\n    }\n  }, React.createElement(MaterialIcons, {\n    name: \"my-location\",\n    size: 20,\n    color: \"#FFF\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 21\n    }\n  }))));\n}\n\nvar styles = StyleSheet.create({\n  map: {\n    flex: 1\n  },\n  avatar: {\n    width: 54,\n    height: 54,\n    borderWidth: 4,\n    borderColor: '#FFF'\n  },\n  callout: {\n    width: 260\n  },\n  devName: {\n    fontWeight: 'bold',\n    fontSize: 16\n  },\n  devBio: {\n    color: '#666',\n    marginTop: 5\n  },\n  devTechs: {\n    marginTop: 5\n  },\n  searchForm: {\n    position: 'absolute',\n    top: 20,\n    left: 20,\n    right: 20,\n    zIndex: 5,\n    flexDirection: 'row'\n  },\n  searchInput: {\n    flex: 1,\n    height: 50,\n    backgroundColor: '#FFF',\n    color: '#333',\n    borderRadius: 25,\n    paddingHorizontal: 20,\n    fontSize: 16,\n    shadowColor: '#000',\n    shadowOpacity: 0.2,\n    shadowOffset: {\n      width: 4,\n      height: 4\n    },\n    elevation: 2\n  },\n  loadButton: {\n    width: 50,\n    height: 50,\n    backgroundColor: '#8E4Dff',\n    borderRadius: 25,\n    justifyContent: 'center',\n    alignItems: 'center',\n    marginLeft: 15\n  }\n});\nexport default Main;","map":{"version":3,"sources":["C:/Users/Fernando/Documents/GitHub/semana_omnistack_10/mobile/src/pages/Main.js"],"names":["React","useState","useEffect","MapView","Marker","Callout","requestPermissionsAsync","getCurrentPositionAsync","MaterialIcons","Main","navigation","currentRegion","setCurrentRegion","loadInitialPosition","granted","enableHighAccuracy","coords","latitude","longitude","latitudeDelta","longitudeDelta","styles","map","avatar","uri","navigate","github_username","callout","devName","devBio","devtechs","searchForm","searchInput","loadButton","StyleSheet","create","flex","width","height","borderWidth","borderColor","fontWeight","fontSize","color","marginTop","devTechs","position","top","left","right","zIndex","flexDirection","backgroundColor","borderRadius","paddingHorizontal","shadowColor","shadowOpacity","shadowOffset","elevation","justifyContent","alignItems","marginLeft"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { StyleSheet, Image, View, Text, TextInput, TouchableOpacity, Keyboard, KeyboardAvoidingView } from 'react-native';\r\nimport MapView, { Marker, Callout } from 'react-native-maps';\r\nimport { requestPermissionsAsync, getCurrentPositionAsync } from 'expo-location';\r\nimport { MaterialIcons } from '@expo/vector-icons';\r\n\r\nfunction Main({ navigation }) {\r\n    const [currentRegion, setCurrentRegion] = useState(null);\r\n\r\n    useEffect(() => {\r\n        async function loadInitialPosition() {\r\n            const { granted } =await requestPermissionsAsync();\r\n            \r\n            if (granted) {\r\n                const { coords } = await getCurrentPositionAsync({\r\n                    enableHighAccuracy: true,\r\n                });\r\n\r\n                const { latitude, longitude } = coords;\r\n\r\n                setCurrentRegion({\r\n                    latitude,\r\n                    longitude,\r\n                    latitudeDelta: 0.04,\r\n                    longitudeDelta: 0.04,\r\n                })\r\n\r\n            }\r\n        }\r\n        loadInitialPosition();  \r\n    }, []);\r\n\r\n    if (!currentRegion) {\r\n        return null;\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <MapView initialRegion={currentRegion} style={styles.map}>\r\n                <Marker coordinate={{ latitude: -22.1316581, longitude: -51.448984}}>\r\n                    <Image style={styles.avatar} source={{ uri: 'https://avatars1.githubusercontent.com/u/61588919?s=460&u=a716dd90443eca06b7373fc922554771000f4048&v=4' }} />\r\n                    <Callout onPress={() => {\r\n                        navigation.navigate('Profile', { github_username: 'tchfer' });\r\n                    }}>\r\n                        <View style={styles.callout}>\r\n                            <Text style={styles.devName}>Flavio Fernando da Silva</Text>\r\n                            <Text style={styles.devBio}>Aluno de ADS na Fatec, entusiasta por tecnologia e educação. Atualmente aprendendo Python e Java para desenvolvimento back-end</Text>\r\n                            <Text style={styles.devtechs}>Python, JavaScript</Text>\r\n                        \r\n                        </View>\r\n                                \r\n                    </Callout>\r\n                </Marker>\r\n            </MapView>\r\n            <View style={styles.searchForm}>\r\n                <TextInput \r\n                    style={styles.searchInput}\r\n                    placeholder=\"Buscar Devs por Techs...\"\r\n                    placeholderTextColor=\"#999\"\r\n                    autoCapitalize=\"words\"\r\n                    autoCorrect={false}\r\n                />\r\n                \r\n                <TouchableOpacity onPress={() => {}} style={styles.loadButton}>\r\n                    <MaterialIcons name=\"my-location\" size={20} color=\"#FFF\" />\r\n                </TouchableOpacity>\r\n\r\n            </View>\r\n        </ >\r\n    );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n    map: {\r\n        flex: 1\r\n    },\r\n\r\n    avatar: {\r\n        width: 54,\r\n        height: 54,\r\n        borderWidth: 4,\r\n        borderColor: '#FFF'\r\n    },\r\n\r\n    callout: {\r\n        width: 260,\r\n    },\r\n\r\n    devName: {\r\n        fontWeight: 'bold',\r\n        fontSize: 16,\r\n    },\r\n\r\n    devBio: {\r\n        color: '#666',\r\n        marginTop: 5,\r\n    },\r\n\r\n    devTechs: {\r\n        marginTop: 5,\r\n    },\r\n\r\n    searchForm: {\r\n        position: 'absolute',\r\n        top: 20,\r\n        left: 20,\r\n        right: 20,\r\n        zIndex: 5,\r\n        flexDirection: 'row',\r\n    },\r\n\r\n    searchInput: {\r\n        flex: 1,\r\n        height: 50,\r\n        backgroundColor: '#FFF',\r\n        color: '#333',\r\n        borderRadius: 25,\r\n        paddingHorizontal: 20,\r\n        fontSize: 16,\r\n        shadowColor: '#000',\r\n        shadowOpacity: 0.2,\r\n        shadowOffset: {\r\n            width: 4,\r\n            height: 4,\r\n        },\r\n        elevation: 2,\r\n    },\r\n\r\n    loadButton: {\r\n        width: 50,\r\n        height: 50,\r\n        backgroundColor: '#8E4Dff',\r\n        borderRadius: 25,\r\n        justifyContent: 'center',\r\n        alignItems: 'center',\r\n        marginLeft: 15, \r\n    },\r\n})\r\n\r\nexport default Main;"]},"metadata":{},"sourceType":"module"}